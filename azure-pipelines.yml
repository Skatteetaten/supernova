# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
- main
- feature/*
- bugfix/*

pool:
  vmImage: ubuntu-latest

steps:
- bash: |
   GITHUB_SHA=$(Build.SourceVersion)
   sha=${GITHUB_SHA::8}
   ts=$(date +%s)
   echo "##vso[task.setvariable variable=BUILD_ID]$(Build.SourceBranchName)-${sha}-${ts}"
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: Maven@3
  displayName: Build Docker image
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'spring-boot:build-image -Dimage.version=$(Build.SourceBranchName)-$(Build.BuildId)'
    publishJUnitResults: false
    jdkVersionOption: '1.11'
- task: Docker@2
  displayName: Push Docker image
  inputs:
    containerRegistry: 'SandboxSkyklarRegistry'
    repository: 'leveranseplattform/supernova'
    command: 'push'
    tags: '$(Build.SourceBranchName)-$(Build.BuildId)'
